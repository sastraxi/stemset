/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as PProfileNameRouteImport } from './routes/p/$profileName'
import { Route as PProfileNameIndexRouteImport } from './routes/p/$profileName/index'
import { Route as PProfileNameRecordingNameRouteImport } from './routes/p/$profileName/$recordingName'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const PProfileNameRoute = PProfileNameRouteImport.update({
  id: '/p/$profileName',
  path: '/p/$profileName',
  getParentRoute: () => rootRouteImport,
} as any)
const PProfileNameIndexRoute = PProfileNameIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PProfileNameRoute,
} as any)
const PProfileNameRecordingNameRoute =
  PProfileNameRecordingNameRouteImport.update({
    id: '/$recordingName',
    path: '/$recordingName',
    getParentRoute: () => PProfileNameRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/p/$profileName': typeof PProfileNameRouteWithChildren
  '/p/$profileName/$recordingName': typeof PProfileNameRecordingNameRoute
  '/p/$profileName/': typeof PProfileNameIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/p/$profileName/$recordingName': typeof PProfileNameRecordingNameRoute
  '/p/$profileName': typeof PProfileNameIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/p/$profileName': typeof PProfileNameRouteWithChildren
  '/p/$profileName/$recordingName': typeof PProfileNameRecordingNameRoute
  '/p/$profileName/': typeof PProfileNameIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/p/$profileName'
    | '/p/$profileName/$recordingName'
    | '/p/$profileName/'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/p/$profileName/$recordingName' | '/p/$profileName'
  id:
    | '__root__'
    | '/'
    | '/p/$profileName'
    | '/p/$profileName/$recordingName'
    | '/p/$profileName/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  PProfileNameRoute: typeof PProfileNameRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/p/$profileName': {
      id: '/p/$profileName'
      path: '/p/$profileName'
      fullPath: '/p/$profileName'
      preLoaderRoute: typeof PProfileNameRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/p/$profileName/': {
      id: '/p/$profileName/'
      path: '/'
      fullPath: '/p/$profileName/'
      preLoaderRoute: typeof PProfileNameIndexRouteImport
      parentRoute: typeof PProfileNameRoute
    }
    '/p/$profileName/$recordingName': {
      id: '/p/$profileName/$recordingName'
      path: '/$recordingName'
      fullPath: '/p/$profileName/$recordingName'
      preLoaderRoute: typeof PProfileNameRecordingNameRouteImport
      parentRoute: typeof PProfileNameRoute
    }
  }
}

interface PProfileNameRouteChildren {
  PProfileNameRecordingNameRoute: typeof PProfileNameRecordingNameRoute
  PProfileNameIndexRoute: typeof PProfileNameIndexRoute
}

const PProfileNameRouteChildren: PProfileNameRouteChildren = {
  PProfileNameRecordingNameRoute: PProfileNameRecordingNameRoute,
  PProfileNameIndexRoute: PProfileNameIndexRoute,
}

const PProfileNameRouteWithChildren = PProfileNameRoute._addFileChildren(
  PProfileNameRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  PProfileNameRoute: PProfileNameRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
