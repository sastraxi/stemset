"""Add recording_user_configs table for user-specific settings

Revision ID: 8453cb11d724
Revises: 001
Create Date: 2025-10-30 23:00:42.495031

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8453cb11d724'
down_revision: Union[str, Sequence[str], None] = '001'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('recording_user_configs',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('recording_id', sa.Uuid(), nullable=False),
    sa.Column('config_key', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('config_value', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['recording_id'], ['recordings.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'recording_id', 'config_key', name='uq_user_recording_config_key')
    )
    op.create_index('idx_user_recording_configs', 'recording_user_configs', ['user_id', 'recording_id'], unique=False)
    op.create_index(op.f('ix_recording_user_configs_recording_id'), 'recording_user_configs', ['recording_id'], unique=False)
    op.create_index(op.f('ix_recording_user_configs_user_id'), 'recording_user_configs', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_recording_user_configs_user_id'), table_name='recording_user_configs')
    op.drop_index(op.f('ix_recording_user_configs_recording_id'), table_name='recording_user_configs')
    op.drop_index('idx_user_recording_configs', table_name='recording_user_configs')
    op.drop_table('recording_user_configs')
    # ### end Alembic commands ###
